plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.4'
}

allprojects {
    group = 'com.sparktransform'
    version = '1.0.0'
    
    repositories {
        mavenCentral()
    }
}

// Spring Boot dependency management
dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

subprojects {
    apply plugin: 'java'
    
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    
    /**
     * Global logging exclusions for all subprojects to prevent SLF4J multiple providers conflicts
     * 
     * This configuration automatically excludes conflicting logging frameworks from ALL dependencies
     * across ALL subprojects, eliminating the need to add exclude blocks to individual dependencies.
     * 
     * Excluded logging frameworks:
     * - Logback: ch.qos.logback (logback-classic, logback-core)
     * - Spring Boot Logging: spring-boot-starter-logging
     * - Spring JCL: spring-jcl (Spring's commons-logging bridge)
     * - SLF4J Implementations: slf4j-simple, slf4j-log4j12
     * - Log4j SLF4J Bridges: log4j-to-slf4j, log4j-slf4j-impl, log4j-slf4j2-impl
     * - Commons Logging: commons-logging
     * 
     * This ensures a single, consistent logging framework across the entire project
     * and prevents the dreaded "SLF4J: Found multiple bindings" error.
     */
    configurations.all {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.springframework', module: 'spring-jcl'
        exclude group: 'org.slf4j', module: 'slf4j-simple'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j2-impl'
        exclude group: 'commons-logging', module: 'commons-logging'
        
        /**
         * Force resolution strategy for version conflicts
         * 
         * This ensures all subprojects use compatible versions of key libraries:
         * - Kryo 4.0.3: Forces use of Kryo 4.x instead of 5.x for Spark compatibility
         * - SLF4J 1.7.36: Consistent logging API version
         * - Logback 1.2.12: Compatible with SLF4J 1.7.x (for Spring Boot app only)
         * 
         * Uses both 'force' declarations and 'eachDependency' closure for comprehensive control
         */
        resolutionStrategy {
            // Force specific versions for compatibility
            force 'com.esotericsoftware:kryo:4.0.3'
            force 'com.esotericsoftware:minlog:1.3.0'
            force 'com.esotericsoftware:reflectasm:1.11.3'
            force 'org.slf4j:slf4j-api:1.7.36'
            force 'ch.qos.logback:logback-classic:1.2.12'
            force 'ch.qos.logback:logback-core:1.2.12'`
            
            // Additional dependency resolution logic using eachDependency
            eachDependency { DependencyResolveDetails details ->
                // Force Kryo 4.x for any Kryo dependencies (overrides any 5.x versions)
                if (details.requested.group == 'com.esotericsoftware' && details.requested.name == 'kryo') {
                    details.useVersion '4.0.3'
                    details.because 'Force Kryo 4.x for Spark compatibility - Kryo 5.x has breaking changes'
                }
                
                // Force specific Scala version for Spark compatibility
                if (details.requested.group == 'org.scala-lang' && details.requested.name == 'scala-library') {
                    details.useVersion '2.12.18'
                    details.because 'Ensure Scala 2.12 compatibility with Spark 3.5.x'
                }
                
                // Prevent any SLF4J implementation conflicts
                if (details.requested.group == 'org.slf4j' && 
                    (details.requested.name.contains('slf4j-log4j') || 
                     details.requested.name.contains('slf4j-simple'))) {
                    details.useVersion '1.7.36'
                    details.because 'Maintain consistent SLF4J version'
                }
                
                // Example: Force specific Spring version if needed
                // if (details.requested.group.startsWith('org.springframework') && 
                //     !details.requested.group.contains('boot')) {
                //     details.useVersion '6.0.13'
                //     details.because 'Maintain Spring 6.0.x compatibility'
                // }
            }
        }
    }
    
    dependencies {
        // Common dependencies for all subprojects
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        
        testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }
    
    test {
        useJUnitPlatform()
    }
}

// Root project has no dependencies

// Gradle wrapper
wrapper {
    gradleVersion = '8.4'
    distributionType = Wrapper.DistributionType.ALL
}
